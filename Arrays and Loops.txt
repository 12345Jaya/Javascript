Arrays  []
------
. It is another type of value.
. Represents a list of values.
. const arr = [10,20,30];
. To access the values in an array or change values we use indexing.
  arr[0] = 10;

. We can put different values in an array 
  [1,'hello',true,{name:'pav'},[1,2]]
. console.log(typeof [1,2]);
  // object
  So an array is a special type of object.

. TO check type of array  -> typeof
  ----------------------
  console.log(typeof [1,2]);


. To check an array  ->  isArray()
  ----------------- 
  Arrays.isArray([1,2])  //true


. console.log(arr.length);
  arr.push(100);


. To remove value from array -> splice()
  --------------------------
  2 numbers are taken 
  1) index we want to remove (start idx)
  2) no of values to remove (how many)

  arr= [10,20,30,40];
  arr.splice(1,2);  // [10,40];

. Arrays are references. Name of the array points in computer memory where the array is. 
  const array1 = [1,2,3]
  const array2 = array1 //it does not contain copy of values but the reference.

. array2.push(4)
  console.log(array1) // [1,2,3,4]
  console.log(array2) // [1,2,3,4]
  Both are modified since arrays are references

. To maintain a copy but not reference, we use slice() method
  const array2 = array1.slice()

. Destructuring
  -------------
  const [first, second] = [1,2,3]   // first = 1, second = 2

Loops
-----
1) for loop     for(initialize, condition, iterate)
2) while loop

for(let i=0; i<arr.length; i++){}

let j=0
while(j<arr.length){
    j++;
}

. Loops contains statements called continue and break
   break = exit the loop early
   continue = skip 1 iteration 



